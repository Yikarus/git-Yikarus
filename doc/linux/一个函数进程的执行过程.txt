linux下，一个函数被编译成一个二进制文件的过程，编译器将函数中所用到的数据分为data与bss，data为已初始化的可全局使用的数据，bss是尚未初始化的，为程序中数据占空，程序保存至text，所调用的函数化为符号表存入，以对应编译。
函数读入内存作为一个进程，首先内核为每一个进程建立一个进程表，里面包含进程id，父进程，进程状态，进程所用寄存器，堆栈信息，工作目录，文件描述符表等，并为进程分配空间，前一部分为程序与数据，后面为堆栈空间，包括用户栈与内核栈，以使用系统调用，进程结束时，内核检查其打开的资源，若未关闭予以关闭。
若创建子进程，复制其所有资源，采用写时复制机制，文件描述符以增加连接数共享，若父进程退出，则关闭父进程所有资源，但是子进程仍有备份，若未等子进程结束，则成为僵尸进程，在shell中，由于只等待父进程，可能会出现输出缓存错位。