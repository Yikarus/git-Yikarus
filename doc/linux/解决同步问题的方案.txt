操作系统内核针对进程间同步例如访问共享对象的方案：1.大多数类unix内核采用非抢占式方案，当进程在内核态完成之前不可被抢占，因此中断和异常不能修改内核的数据结构。2.禁止中断，进入临界区时禁止中断，若临界区较大则相当一段时间不可以进行其他操作，且多处理器时禁止一个处理器的中断是不够的。3.信号量在单处理器系统和多处理器系统都有应用，每个信号量其实就是一个内核区包括一个整数，一个等待进程列表，两个原子操作的数据结构。4.自旋锁，用于处理多cpu同步，若是使用信号量，如果修改数据结构的时间很短，则进程挂起等待调度的花费很高，使用自旋锁，多cpu修改被锁的结构时，一直进行紧凑的循环直到他解锁，这就避免了进程空间的切换的花费，但是在单cpu时就显得臃肿。
