实时操作系统要求在一个触发信号到来之后能够在一个确定的时间点之前进行响应处理。它与普通的非实时操作系统区别在于：普通操作系统的响应延时受系统负载影响较大，轻负载时可能会满足响应的要求，但是在负载变大的时候响应会变慢，并且这个响应时间是不确定的。因此一个足够快的系统不代表是一个实时操作系统，实时系统必须要求在负载变化的情况下依然能够满足确定的响应时间，如果无法在确定的时候下完成响应，那么会导致系统错误，特点是低延迟，高可靠性。
实时操作系统为了保持较快，减少不必要的任务切换时间，大部分都只在内核空间下进行，避免了进程空间切换开销。同步一般采用优先级继承的各种锁，互斥锁，计数值锁，自旋锁。需要实现中断嵌套，x86中断就是在用户空间处理，所以嵌套可使用相同的堆栈，很多实时系统采用基于中断等级的伪线程。内存管理，由于分页，虚拟内存过于耗时，一般采用同一进程空间，但是就没有了线程间安全，任务可以访问任意内存，建议使用简单的内存映射，例如采用分段，一级分页等。
