TCP 流量控制，控制己方缓存区，告知发送方能接受多少数据，称为通告窗口，以控制流量
       拥塞控制，路由器，先不断增加一次发送数据的量，得到链路上的MTU，以防止路由器分组，慢启动，拥塞避免（网络拥塞则少传）
                       大致步骤，主机一开始并不知道链路所能承载其发送数据包的速率，所以逐渐的试探其最高发送速率，成为慢启动，维护一个拥塞窗口cwnd，开始设为1MSS，收到ack表示网络能够承载，cwnd乘以2，一个RTT发送cwnd，当cwnd成长为超过链路最大值时，出现丢包，TCP认为其出现了拥塞，将其cwnd设为初始1MSS，重新启动。但是慢启动指数增长太莽，于是引入拥塞避免，在第一次出现拥塞时，记录ssthresh为cwnd/2，第二次进行慢启动时，速率到达ssthresh是进入拥塞避免，cwnd一个RTT增加一个MSS，指数增长变为加性增长，再次出现丢包时与慢启动一样，ssthresh为减半的cwnd，cwnd回1MSS，此时从较高速率转回1会引起网络震荡并减缓速度，快速恢复算法使此时收到冗余ack时，cwnd+MSS后，不进入慢启动而直接置cwnd为ssthresh，进入拥塞避免。
TCP11种状态 开始是关闭close状态，主动开启发送syn信号，进入syn-send状态（发了syn)，服务器初始为listen状态，收到syn返回一个ack，进入syn-recv状态（收到syn），客户端收到syn+ack再返回一个ack以防无效的连接，保证可靠链接（TCP觉得下层不靠谱），进入established态，服务器收到ack进入establish态，此时可收发数据，结束时，客户端发送fin进入fin-wait-1（已发送fin未收到ack），服务器收到fin，知道关闭一方链接，返回最后的数据包，客户端在发送fin之后收到的ack是数据包，此时进入close-wait-2（表示知道服务器知道了fin），服务器发完数据之后关闭链接，也发送fin，序号与最后的数据包的序号一致，进入last-ack态，表示等待最后客户端的返回，客户端收到fin进入close-wait态等待两个msl后关闭，回到closed,防止丢包，服务器收到ack进入closed。
还有一种特殊的状态closing状态，发生在双方同时关闭，此时双方发送fin之后没有等到ack却收到了fin，双方进入closing，再双方互回一个ack后，进入time-wait。