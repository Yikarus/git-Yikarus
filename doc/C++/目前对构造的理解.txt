C++有默认构造函数，在未编写显示构造函数的时候，编译器会提供默认构造函数，默认构造函数分为trivial和nontrivial的，trivial代表这里提供是没有用的，因此默认不做任何事情，nontrivial默认构造函数是要做事情的。
nontrivial的情况很清楚，要么基类有nontrivial构造，要么成员有构造，要么自身带虚函数，需要构造vptr，其他都是trivial。析构函数默认析构对应类对象占有的空间，其他不做任何事情，因此，若类中含有动态分配对象，则需要显示定义。
其他copy构造和移动构造，trivial是逐位复制，对于每个对象都是独立的个体，bitwise就不能使用，需要自己定义。
对于类内初始化，引用和类内常数需要构造前赋值，写在初始化列表内，若要捕捉函数异常，包括构造函数，使用函数try，在大括号之前，见示例。
对于继承，保存基类结构，并在之后添加自己的部分，若有虚函数，不同编译器有不同的做法（虚函数指针的位置），虚函数表第一个是类类型对于现在的编译器。指针或引用才能进行动态绑定，具体类型都固定了格局。
多继承基类构造函数不能出现相同参数，出现就需要在派生类中定义以覆盖，防止类被多次引用，使用虚继承。
